# make array from segmentation
nda = sitk.GetArrayFromImage(new_slice)

# Calculate the centre of the segmentation
# by 1st getting the average y value.
# Then, finding the average x value on that y-value to ensure
# there is an actual point there
# Also determine 4 seed values by going 25% outwards
# in the x, -x, y and -y directions.
new_centre = [0, 0]

# calculate the average y value of the pixels
# and the height (Δy) of the aorta
list_y, _ = np.where(nda == 1)
max_y = max(list_y)
min_y = min(list_y)

total_coord = len(list_y)

new_centre[1] = int(sum(list_y) / len(list_y))
height = max_y - min_y

# calculate the average x value of the pixels
# along the predetermined y value.
# also calulate the width (Δx) along that height
list_x = np.where(nda[new_centre[1]] == 1)[0]
width = len(list_x)

# if there were no pixels along that y value for whatever reason,
# just get the centre of gravity of the segmentation
# by finding the overall average x value
if (width == 0):
    _, list_x = np.where(nda == 1)
new_centre[0] = int(np.average(list_x))

# determine next seed values; y1,x1, y2,x2 are vertical values;
# y3,x3, y4,x4 are horizontal the seed values are 25% outwards
# from the centre.
# 25% refers to 25% of the entire width or height of the segmentation
new_seeds = []

# vertical
y1 = int((max_y + new_centre[1])/2)
y2 = int((min_y + new_centre[1])/2)

# find x values along those y values
next_seed_x1_list = np.where(nda[y1] == 1)[0]
next_seed_x2_list = np.where(nda[y2] == 1)[0]
width1 = len(next_seed_x1_list)
width2 = len(next_seed_x2_list)

# only assign seed if width is relatively large
if (width1 > width / 2):
    new_seeds.append([int(np.average(next_seed_x1_list)), y1])
if (width2 > width / 2):
    new_seeds.append([int(np.average(next_seed_x2_list)), y2])

# horizontal
x3 = int(new_centre[0] + width/2)
x4 = int(new_centre[0] - width/2)

# find y values along those x values
next_seed_y3_list = np.where(nda[:, x3] == 1)[0]
next_seed_y4_list = np.where(nda[:, x4] == 1)[0]
height3 = len(next_seed_y3_list)
height4 = len(next_seed_y4_list)

# only assign seed if width is relatively large
if (height3 > height / 2):
    new_seeds.append([x3, int(np.average(next_seed_y3_list))])
if (height4 > height / 2):
    new_seeds.append([x4, int(np.average(next_seed_y4_list))])

return total_coord, new_centre, new_seeds